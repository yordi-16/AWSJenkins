AWSTemplateFormatVersion: 2010-09-09


Description: >-
  This template creates
  an Ec2 instance with
  parameters and outputs
  values like the Instance ID,
  Public and Private IDS.
  Security GroupsT

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 Key pair


  InstanceType:
    Type: String
    Default: t2.micro
    # AllowedValues:
    #   - t2.micro
    #   - t2.small
    #   - t2.medium
    #   - t2.large
    #   - m1.small
    #   - m1.medium
    #   - m1.large
    #   - m1.xlarge
    #   - m2.xlarge
    #   - m2.2xlarge
    #   - m2.4xlarge
    #   - m3.medium
    #   - m3.large
    #   - m3.xlarge
    #   - m3.2xlarge
    #   - m4.large
    #   - m4.xlarge
    #   - m4.2xlarge
    #   - m4.4xlarge
    #   - m4.10xlarge
    #   - c1.medium
    #   - c1.xlarge
    #   - c3.large
    #   - c3.xlarge
    #   - c3.2xlarge
    #   - c3.4xlarge
    #   - c3.8xlarge
    #   - c4.large
    #   - c4.xlarge
    #   - c4.2xlarge
    #   - c4.4xlarge
    #   - c4.8xlarge
    #   - g2.2xlarge
    #   - g2.8xlarge
    #   - r3.large
    #   - r3.xlarge
    #   - r3.2xlarge
    #   - r3.4xlarge
    #   - r3.8xlarge
    #   - i2.xlarge
    #   - i2.2xlarge
    #   - i2.4xlarge
    #   - i2.8xlarge
    #   - d2.xlarge
    #   - d2.2xlarge
    #   - d2.4xlarge
    #   - d2.8xlarge
    #   - hi1.4xlarge
    #   - hs1.8xlarge
    #   - cr1.8xlarge
    #   - cc2.8xlarge
    #   - cg1.4xlarge
    ConstraintDescription: Must be a valid Ec2 instance type
  
  VpcId:
    Type: AWS::EC2::VPC::Id
  
  SubnetId:
    Type: AWS::EC2::Subnet::Id

  EnvType:
    Type: String 
    Default: Testing
    # AllowedVaules:
    #   - production
    #   - Develelopment
    #   - Testing
    #   - Quality Asssurance 
    ConstraintDescription: Must specify production, Development, Testing, or Quality Assurance

  SSHLocation:
    Type: String
    #MiniLength: 9
    MaxLength: 18
    Default:  0.0.0.0/0
    Allowedpattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP CIDR range of the format x.x.x.x/x


  SGNameTag:
    Type: String
    MiniLength: 5
    MaxLenght: 30


Conditions:
  CreatedProductionResources: !Equals 
    - !Ref EnvType
    - Production


# Rules:
#   TestInstanceType:
#     RuleCondition: !Equals
#       - !Ref EnvType
#       - Testing
#     Assertions:
#       - Assert:
#         'Fn::Contains':
#           - - t1.micro
#           - !Ref InstancesType
#         AssertDescription: For a testing Environment, the instance type must be t1.micro

#   ProdInstanceeType:
#     RuleDescription: !Equals
#       - !Ref EnvType
#       - Production
#     Assertions:
#       - Assert:
#         'Fn::Contains':
#           - - t2.micro
#           - !Ref InstanceType
#         AssertDescription: For a Production  Environment, the instance type must be t1.micro

Resources:
  Webserver:
    Type: AWS::EC2::Instance
    Condition: CreatedProductionResources
    Properties:
      ImageId: ami-0aeeebd8d2ab47354
      InstanceType: !Ref InstanceType
      SubnetId: !Ref SubnetId
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref WebserverSecurityGroup

      Tags: 
        - Key: Name
          Value: Web server
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum -y update
          yum -y install httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><h1>Hello from Clodformation</h1></html>" > /var/www/html/index.html


  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP  via port 22 and 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId
      Tags: 
        - Key: Name
          Value: SGNameTag
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - SubnetId

      - Lable:
          default: "Amazon EC2 Configuration"
        Parameters:
          - InstanceType
          - KeyName
      - Label:
          default: "Enviroment"
        Parameters:
          - EnvType

      - Lable:
          default: "SSH IP Address"
        Parameters:
          - SSHLocation

      - Lable:
          default: "Security Group Name Tag"
        Parameters:
          - SGNameTag

    Parameterlables:
      VpcId:
        default: " Which VPC should this be deploy to ? "
      InstanceType:
        default: " What instance type do you want to choose"
      SubnetId:
        default: "choose subnet"
      KeyName:
        default: "choose an Existing  EC2 Key Pair "
      EnvType:
        default: "choose your Environment"
      SSHLocation:
        default: "Enter your Ip address range that can ssh into the ec2 instance"
      SGNameTag:
        default: "Type a name for your security group"
        


      



























    



           























    
